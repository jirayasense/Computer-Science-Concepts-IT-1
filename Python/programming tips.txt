* To get max int value in python -> sys.maxint
         min int value in python -> -sys.maxint - 1


* dis.dis()
  
  -> dis() expose a readable version of the Python bytecode 
     allowing the inspection of the low-level instructions 
     that the Python interpreter will use while executing the program.


* Lambda, Closure & Evaluation time 

  -> tip = pass free variable as argument to lambda inorder to avoid inconsistency

* If you are maintaining diff namespace in same python file/module :-
   then to get the names from root file level from nested namespace :-
     Use below :-
       from __main__ import obj_name


* list(collection) related tips :
  ---------------------------

  list comprehension is better compare to other HOF.


  -> list slice assignment is better than normal assignment :-
    
     1) insert via slice 
     2) inplace list modification via slice 
     3) entire list assignment via slice 

     for list -> range is best, 
                 comprehension  
                 append
                 concat   (+)

   -> list comprehension is twice as fast as a for loop with an append operation

   * List assignment inplace vs new :
     -----------


* Tuples & Dict & Size :
  ----------
   -> tuples takes less size than dict


* itertools islice :
  -----------
   Note eventhough islice() provides you sliced values as asked, it's complexity is linear from 0 -> end 
   Eg 
      l = (100 elements)
      you asked for 10 -> 13

      Here it's complexity will not be only 4 but 0 -> 13 i.e 14 instead



* useful Python functions :
  ---------------
   -> map(), filter(), reduce()
   -> itertools : accumulate, takewhile(), chain(), compress()
   -> collections : namedtuple, Counter, deque, frozenset, defaultdict
   -> math : log(), floor(), ceil(), round()
   -> sys : maxsize, argv, 
   -> file: 
   -> pathlib: 
   -> os : 
   -> dict : setdefault()
   -< heapq : heapq
   -> time: time()
   -> keyword : keywrod.kwlist
   -> operator : operator.attrgetter(), itemgetter()


* useful python concepts :
  -------------
   - circular references.
     
    
    

        
